一、简单队列模式
	1个生产者，1个消费者；
	这种模式下消费者是按照消费的生产顺序严格进行消费的，可以看作是严格顺序消息队列
	生产到消费共用队列

二、工作队列模式
	1个生产者，多个消费者；
	消费者按照次序逐次把消息排放到各个消费者
	因此默认情况下，消费调度并不是按照工作量来的，而是按照顺序公平调度来的
	解决方法设置：BasicQos(0,1,false)；第二个参数为1
	在处理并确认前一条消息之前，不要向工作人员发送新消息；相反，它会将它分派给下一个不忙的工人(能者多劳)
	生产到消费共用队列，但是工作模式具有多个消费者同时消费该队列

三、发布、订阅模式
	也是一个生产者，多个消费者，不过与上面方案不同的是每一消费者都有自己一个队列
	生产者并不会直接把消息发送到队列中，而是将消息发送到交换机，消费者创建各自的队列绑定到交换机
	当消费者实例绑定同样的交换机,消费者都能接受到生产者发送的所有消息
	本例是用发布、订阅（fanout）模式
	几种可用的交换机：direct、topic、headers、fanout

四、路由模式
	仍然是多个消费，这个生产者把消费者把消费发送到direct类型的交换机上
	该交换机按照绑定的Key路由消息到固定的队列
	简单理解就是生产者将消息发送到交换机上，然后根据交换机上绑定的key所对应的路由
	再将消息发送至相应的队列中;
	
五、主题模式
	通配符模式和路由模式其实差不多,不同于配符模式中的路由可以声明为模糊查询.
	主题模式相比路由模式，其更灵活，按照订阅的主题建立相关队列，交换机按照主题路由消息到各个队列
	这里一条消息如果负责多个队列的规则，则消息被路由分发到多个队列
	当然如果多个规则都匹配一条消息，在一个队列这条消息也仅被路由1次
	主题可以支持通配符*和#
	符号“#”匹配一个或多个
	符号“*”匹配一个词
	RabbitMQ中通配符的通配符是用"."来分割字符串的.比如a.*只能匹配到a.b,a.c,而a.#可以匹配到a.a.c,a.a.b.

六、RPC模式（后期跟进）
	RPC是远程过程调用，其可以返回调用后执行的结果值，因此通过RPC模式，
	可以利用RabbitMQ构建一个基于RPC通讯的分布式微服务系统

	消息队列模式有多种，这里介绍五种队列场景Dome，根据业务场景选择！

CloudAMQP连接云服务器，无需配置环境即可进行实操
本地连接的需要下载RabbitMQ所依赖的环境，配置环境变量等...
连接CloudAMQP简单做个连接，是否成功
网上教程：https://www.cnblogs.com/zxtceq/p/14016564.html
